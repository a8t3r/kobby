@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.paint_without_parentheses.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.paint_without_parentheses.kobby.kotlin.PaintContext
import io.github.ermadmi78.kobby.testcases.paint_without_parentheses.kobby.kotlin.PaintDSL
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.Suppress

public interface Square : Shape, Polygon {
  override val id: Long

  override val opaque: Boolean

  public val length: Int

  override fun __context(): PaintContext

  public fun SquareProjection.__withCurrentProjection()
}

@PaintDSL
public interface SquareProjection : ShapeProjection, PolygonProjection {
  override val id: Any?

  override val opaque: Any?

  public val length: Any?

  override fun __minimize() {
  }
}
