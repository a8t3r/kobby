@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.EscapeContext
import io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.EscapeDSL
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress

public interface SeveralPrimaryKeys {
  public val `if`: Long

  public val `do`: String?

  public val `while`: Int

  public val it: String?

  public val other: String?

  public val result: Int

  public val block: String?

  public fun __context(): EscapeContext

  public fun SeveralPrimaryKeysProjection.__withCurrentProjection()
}

@EscapeDSL
public interface SeveralPrimaryKeysProjection {
  public fun __minimize() {
  }
}
