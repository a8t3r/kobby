@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.paint_without_parentheses.kobby.kotlin.dto

import com.fasterxml.jackson.`annotation`.JsonInclude
import io.github.ermadmi78.kobby.testcases.paint_without_parentheses.kobby.kotlin.PaintDSL
import kotlin.Boolean
import kotlin.Int
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply
import kotlin.error

@JsonInclude(value = JsonInclude.Include.NON_ABSENT)
public data class RectangleInput(
  public val opaque: Boolean,
  public val width: Int,
  public val height: Int,
)

public fun RectangleInput.toBuilder(): RectangleInputBuilder = RectangleInputBuilder().also {
  it.opaque = this.opaque
  it.width = this.width
  it.height = this.height
}

public fun RectangleInputBuilder.toInput(): RectangleInput = RectangleInput(
  opaque ?: error("RectangleInput: 'opaque' must not be null"),
  width ?: error("RectangleInput: 'width' must not be null"),
  height ?: error("RectangleInput: 'height' must not be null")
)

public fun RectangleInput(block: RectangleInputBuilder.() -> Unit): RectangleInput =
    RectangleInputBuilder().apply(block).toInput()

public fun RectangleInput.copy(block: RectangleInputBuilder.() -> Unit): RectangleInput =
    toBuilder().apply(block).toInput()

@PaintDSL
public class RectangleInputBuilder {
  public var opaque: Boolean? = null

  public var width: Int? = null

  public var height: Int? = null
}
