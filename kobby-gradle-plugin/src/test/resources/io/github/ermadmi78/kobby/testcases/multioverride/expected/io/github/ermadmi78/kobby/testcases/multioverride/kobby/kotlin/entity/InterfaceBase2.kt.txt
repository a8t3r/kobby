@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.multioverride.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.multioverride.kobby.kotlin.MultiOverrideContext
import io.github.ermadmi78.kobby.testcases.multioverride.kobby.kotlin.MultiOverrideDSL
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit

public interface InterfaceBase2 {
  public val noOverride2: String

  public val interfaceMultiOverride: String

  public fun __context(): MultiOverrideContext
}

@MultiOverrideDSL
public interface InterfaceBase2Projection {
  public fun noOverride2(size: Int? = null)

  public fun interfaceMultiOverride(size: Int?)

  public fun __minimize() {
  }
}

@MultiOverrideDSL
public interface InterfaceBase2Qualification {
  public
      fun __onInterfaceMultiOverrideImplementation(__projection: InterfaceMultiOverrideImplementationProjection.() -> Unit)
}

@MultiOverrideDSL
public interface InterfaceBase2QualifiedProjection : InterfaceBase2Projection,
    InterfaceBase2Qualification
