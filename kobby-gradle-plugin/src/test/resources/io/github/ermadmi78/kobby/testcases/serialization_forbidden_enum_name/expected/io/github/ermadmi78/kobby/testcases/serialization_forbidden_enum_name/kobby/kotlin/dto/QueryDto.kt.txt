@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.dto

import io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.ForbiddenEnumNameDSL
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply
import kotlin.let
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
@SerialName("Query")
public data class QueryDto(
  public val user: user_update_column? = null,
)

public fun QueryDto(block: QueryDtoBuilder.() -> Unit): QueryDto {
  // QueryDto builder DSL
  return QueryDtoBuilder().apply(block).let {
    QueryDto(
          it.user
        )
  }
}

public fun QueryDto.copy(block: QueryDtoBuilder.() -> Unit): QueryDto {
  // QueryDto copy DSL
  return QueryDtoBuilder().also {
    it.user = this.user
  }
  .apply(block).let {
    QueryDto(
          it.user
        )
  }
}

@ForbiddenEnumNameDSL
public class QueryDtoBuilder {
  public var user: user_update_column? = null
}
