@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.serialization_disable.kobby.kotlin.dto

import io.github.ermadmi78.kobby.testcases.serialization_disable.kobby.kotlin.SimpleDSL
import java.time.LocalDate
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply

public data class SimpleDto(
  public val id: Long? = null,
  public val name: String? = null,
  public val date: LocalDate? = null,
)

public fun SimpleDto.toBuilder(): SimpleDtoBuilder = SimpleDtoBuilder().also {
  it.id = this.id
  it.name = this.name
  it.date = this.date
}

public fun SimpleDtoBuilder.toDto(): SimpleDto = SimpleDto(
  id,
  name,
  date
)

public fun SimpleDto(block: SimpleDtoBuilder.() -> Unit): SimpleDto =
    SimpleDtoBuilder().apply(block).toDto()

public fun SimpleDto.copy(block: SimpleDtoBuilder.() -> Unit): SimpleDto =
    toBuilder().apply(block).toDto()

@SimpleDSL
public class SimpleDtoBuilder {
  public var id: Long? = null

  public var name: String? = null

  public var date: LocalDate? = null
}
