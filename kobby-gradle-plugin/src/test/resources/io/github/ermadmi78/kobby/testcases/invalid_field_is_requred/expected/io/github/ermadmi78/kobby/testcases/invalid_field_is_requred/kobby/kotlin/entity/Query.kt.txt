@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.invalid_field_is_requred.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.invalid_field_is_requred.kobby.kotlin.InvalidFieldIsRequredContext
import io.github.ermadmi78.kobby.testcases.invalid_field_is_requred.kobby.kotlin.InvalidFieldIsRequredDSL
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List

public interface Query {
  public val countries: List<Country>

  public fun __context(): InvalidFieldIsRequredContext

  public fun QueryProjection.__withCurrentProjection()
}

@InvalidFieldIsRequredDSL
public interface QueryProjection {
  public fun countries(__projection: CountryProjection.() -> Unit)

  public fun __minimize() {
  }
}
