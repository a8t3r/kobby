@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package my.root.en

import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import my.root.ctx.PrefCtxContextPostCtx
import my.root.ctx.PrefCtxDSLPostCtx
import my.root.dto1.EPrefGenderEPost
import my.root.dto1.EPrefGenreEPost

public interface PrefEnCountryPostEn : PrefEnEntityPostEn {
  override val id: Long

  override val fields: String

  public val name: String

  public val film: PrefEnFilmPostEn?

  public val films: List<PrefEnFilmPostEn>

  public val actor: PrefEnActorPostEn?

  public val actors: List<PrefEnActorPostEn>

  public val native: List<PrefEnNativePostEn>

  override fun context(): PrefCtxContextPostCtx

  public fun PrePrCountryPostPr.withCurrentProjection()
}

@PrefCtxDSLPostCtx
public interface PrePrCountryPostPr : PrePrEntityPostPr {
  override fun withPrFieldsWithPo(selection: PreSelEntityFieldsPostSel.() -> Unit)

  public fun withoutPrNameWithoutPo()

  public fun withPrFilmWithPo(id: Long, projection: PrePrFilmPostPr.() -> Unit = {})

  public fun withPrFilmsWithPo(query: PreQrCountryFilmsPostQr.() -> Unit = {})

  public fun withPrActorWithPo(id: Long, projection: PrePrActorPostPr.() -> Unit = {})

  public fun withPrActorsWithPo(query: PreQrCountryActorsPostQr.() -> Unit = {})

  public fun withPrNativeWithPo(projection: PreQPNativePostQP.() -> Unit = {})

  override fun minimize() {
    withoutPrNameWithoutPo()
  }
}

@PrefCtxDSLPostCtx
public interface PreSelCountryFilmsPostSel {
  public var title: String?

  public var genre: EPrefGenreEPost?

  /**
   * Default: 10
   */
  public var limit: Int?

  /**
   * Default: 0
   */
  public var offset: Int?
}

@PrefCtxDSLPostCtx
public interface PreQrCountryFilmsPostQr : PreSelCountryFilmsPostSel, PrePrFilmPostPr

@PrefCtxDSLPostCtx
public interface PreSelCountryActorsPostSel {
  public var firstName: String?

  public var lastName: String?

  public var gender: EPrefGenderEPost?

  /**
   * Default: 10
   */
  public var limit: Int?

  /**
   * Default: 0
   */
  public var offset: Int?
}

@PrefCtxDSLPostCtx
public interface PreQrCountryActorsPostQr : PreSelCountryActorsPostSel, PrePrActorPostPr
