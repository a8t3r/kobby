@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.ForbiddenEnumNameContext
import io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.ForbiddenEnumNameDSL
import io.github.ermadmi78.kobby.testcases.serialization_forbidden_enum_name.kobby.kotlin.dto.user_update_column
import kotlin.Long
import kotlin.Suppress
import kotlin.Unit

public interface Query {
  public val user: user_update_column?

  public fun __context(): ForbiddenEnumNameContext

  public fun QueryProjection.__withCurrentProjection(): Unit
}

@ForbiddenEnumNameDSL
public interface QueryProjection {
  public fun user(id: Long): Unit

  public fun __minimize(): Unit {
  }
}
