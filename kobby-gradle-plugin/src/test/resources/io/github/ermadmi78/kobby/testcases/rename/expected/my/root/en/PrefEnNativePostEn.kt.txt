@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package my.root.en

import kotlin.Suppress
import kotlin.Unit
import my.root.ctx.PrefCtxContextPostCtx
import my.root.ctx.PrefCtxDSLPostCtx

public interface PrefEnNativePostEn {
  public fun context(): PrefCtxContextPostCtx
}

@PrefCtxDSLPostCtx
public interface PrePrNativePostPr {
  public fun minimize() {
  }
}

@PrefCtxDSLPostCtx
public interface PreQalNativePostQal {
  public fun onPrFilmOnPo(projection: PrePrFilmPostPr.() -> Unit = {})

  public fun onPrActorOnPo(projection: PrePrActorPostPr.() -> Unit = {})
}

@PrefCtxDSLPostCtx
public interface PreQPNativePostQP : PrePrNativePostPr, PreQalNativePostQal
